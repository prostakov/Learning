openapi: 3.0.1
info:
  title: AnimalHouse.CodeFirst.Server
  description: A simple example ASP.NET Core Web API
  contact:
    name: Serhii Prostakov
    url: https://twitter.com/prostakov
    email: serhii.prostakov@propellminds.ai
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: '23.4'
paths:
  /api/v23.4/Animals:
    get:
      tags:
        - Animals
      summary: GetAllAnimals
      description: Gets all animals that are currently in storage
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnimalHouse.Common.Models.Animal'
        '400':
          description: Invalid tag value
    post:
      tags:
        - Animals
      summary: CreateNewAnimal
      description: Animals can be created
      requestBody:
        description: Animal to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalHouse.Common.Models.Animal'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.Common.Models.Animal'
        '400':
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse'
    put:
      tags:
        - Animals
      summary: UpdateAnimal
      description: Animals can be updated
      requestBody:
        description: Animal to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalHouse.Common.Models.Animal'
      responses:
        '204':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.Common.Models.Animal'
        '400':
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                type: string
  /api/v23.4/Animals/tags:
    get:
      tags:
        - Animals
      summary: FindAnimalsByTags
      description: 'Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.'
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnimalHouse.Common.Models.Animal'
        '400':
          description: Invalid tag value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse'
  '/api/v23.4/Animals/{id}':
    delete:
      tags:
        - Animals
      summary: DeleteAnimal
      description: Animals can be deleted
      parameters:
        - name: id
          in: query
          description: Id of animal to delete
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
        '400':
          description: Request error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse'
        '404':
          description: Not found error
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/v23.4/Subscriptions:
    put:
      tags:
        - Subscriptions
      summary: UpdateSubscription
      description: Subscriptions can be created and updated
      requestBody:
        description: Subscription to create or update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalHouse.Common.Models.Subscription'
      responses:
        '204':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.Common.Models.Subscription'
        '400':
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse'
  '/api/v23.4/Subscriptions/{id}':
    delete:
      tags:
        - Subscriptions
      summary: DeleteSubscription
      description: Subscriptions can be deleted
      parameters:
        - name: id
          in: query
          description: Id of subscription to delete
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
        '400':
          description: Request error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse'
        '404':
          description: Not found error
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
components:
  schemas:
    AnimalHouse.CodeFirst.Server.Responses.ErrorApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
    AnimalHouse.Common.Models.Animal:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AnimalHouse.Common.Models.Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        callbackUrl:
          type: string
          nullable: true
        callbackToken:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: JWT Authorization header using the Bearer scheme.
      scheme: bearer
security:
  - Bearer: [ ]