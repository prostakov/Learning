openapi: 3.0.1
info:
  title: AnimalHouse.CodeFirst.Server
  description: A simple example ASP.NET Core Web API
  contact:
    name: Serhii Prostakov
    url: https://twitter.com/prostakov
    email: serhii.prostakov@propellminds.ai
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: '24.0'
paths:
  /api/v24/Animals:
    get:
      tags:
        - Animals
      summary: GetAllAnimals
      description: Gets all animals that are currently in storage
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Bird'
                    - $ref: '#/components/schemas/Fish'
                    - $ref: '#/components/schemas/Mammal'
                    - $ref: '#/components/schemas/Reptile'
        '400':
          description: Invalid tag value
    post:
      tags:
        - Animals
      summary: CreateNewAnimal
      description: "Animals can be created\r\n\r\nSample request:\r\n            \r\n    POST /Todo\r\n    {\r\n       \"id\": 1,\r\n       \"name\": \"Item #1\",\r\n       \"isComplete\": true\r\n    }"
      requestBody:
        description: Animal to create
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Bird'
                - $ref: '#/components/schemas/Fish'
                - $ref: '#/components/schemas/Mammal'
                - $ref: '#/components/schemas/Reptile'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Bird'
                  - $ref: '#/components/schemas/Fish'
                  - $ref: '#/components/schemas/Mammal'
                  - $ref: '#/components/schemas/Reptile'
        '400':
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Animals
      summary: UpdateAnimal
      description: Animals can be updated
      requestBody:
        description: Animal to update
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Bird'
                - $ref: '#/components/schemas/Fish'
                - $ref: '#/components/schemas/Mammal'
                - $ref: '#/components/schemas/Reptile'
      responses:
        '204':
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Bird'
                  - $ref: '#/components/schemas/Fish'
                  - $ref: '#/components/schemas/Mammal'
                  - $ref: '#/components/schemas/Reptile'
        '400':
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                type: string
  /api/v24/Animals/tags:
    get:
      tags:
        - Animals
      summary: FindAnimalsByTags
      description: 'Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.'
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Bird'
                    - $ref: '#/components/schemas/Fish'
                    - $ref: '#/components/schemas/Mammal'
                    - $ref: '#/components/schemas/Reptile'
        '400':
          description: Invalid tag value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/v24/Animals/{id}':
    delete:
      tags:
        - Animals
      summary: DeleteAnimal
      description: Animals can be deleted
      parameters:
        - name: id
          in: query
          description: Id of animal to delete
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
        '400':
          description: Request error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Not found error
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/v24/Subscriptions:
    put:
      tags:
        - Subscriptions
      summary: UpdateSubscription
      description: Subscriptions can be created and updated
      requestBody:
        description: Subscription to create or update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '204':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
      callbacks:
        New Vendor:
          '{$request.body#/callbackUrl}/vendorNew':
            post:
              summary: Callback initiated when new vendor is created from VIC.AI admin panel.
              description: "This request is sent when a user in Vic.ai adds a new vendor to the system.\r\n\r\nRequest body contains the vendor object.\r\n\r\nA 201 response indicates that the vendor object has been successfully persisted to the external system, and it must contain the external system's vendor object id as the externalId parameter.\r\n\r\nAny other response will be considered a failure, the vendor object externalId will not be specified, and the error message you specify will be surfaced to the user.\r\n\r\nA 400 response indicates a data validation error.\r\n\r\nThis callback will timeout after 5 seconds."
              parameters:
                - name: X-Request-Id
                  in: header
                  description: Token to be able to correctly correlate associated requests
                  schema:
                    type: string
                    format: uuid
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/VendorCallback'
                required: true
              responses:
                '201':
                  description: Successful upsert
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SuccessfulUpsertApiResponse'
                '202':
                  description: Acknowledge receipt
                  content:
                    text/plain:
                      schema:
                        type: string
                      example: ok
                default:
                  description: Unexpected error
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorApiResponse'
        Post Invoice:
          '{$request.body#/callbackUrl}/invoicePost':
            post:
              summary: Callback initiated when new invoice is being created from VIC.AI admin panel.
              description: "This request is sent when a user in Vic.ai posts an invoice object to the system.\r\n\r\nRequest body contains the invoice object (invoiceData part) as JSON, and corresponding invoice documents as a pdf file (invoicePayload part) as multipart form data. This will always be a pdf file.\r\n\r\nA 201 response indicates that the invoice object has been successfully persisted to the external system, and it must contain the external system's invoice object id as the externalId parameter.\r\n\r\nA 202 response indicates that the receipt of the invoice object has been acknowledged; an asynchronous update will occur via invoiceConfirm operationId; the supplied 'X-Request-Id' in the request header will be provided as the X-Request-Id header for any associated asynchronous updates.\r\n\r\nAny other response will be considered a failure, the invoice object externalId will not be specified, and the error message you specify will be surfaced to the user.\r\n\r\nA 400 response indicates a data validation error.\r\n\r\nThis callback will timeout after 5 seconds; to prevent inconsistencies, if the request will take longer than 5 seconds, it is appropriate to respond with a 202 response code."
              parameters:
                - name: X-Request-Id
                  in: header
                  description: Token to be able to correctly correlate associated requests
                  schema:
                    type: string
                    format: uuid
              requestBody:
                content:
                  multipart/form-data:
                    schema:
                      type: object
                      properties:
                        invoiceData:
                          $ref: '#/components/schemas/InvoiceData'
                        invoiceDocument:
                          type: string
                          format: binary
                    encoding:
                      invoiceData:
                        contentType: application/json
                      invoiceDocument:
                        contentType: application/pdf
                required: true
              responses:
                '201':
                  description: Successful upsert
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SuccessfulUpsertApiResponse'
                '202':
                  description: 'Deferred post, confirmation asynchronous'
                '400':
                  description: Invalid invoice data
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorApiResponse'
                default:
                  description: Unexpected error
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorApiResponse'
        Transfer Invoice:
          '{$request.body#/callbackUrl}/invoiceTransfer':
            post:
              summary: Callback initiated when new invoice is being posted from VIC.AI admin panel.
              description: "This request is sent when a user in Vic.ai selects and invoice document and transfers it to the external system. Note: there will be no Vic.ai generated invoice data sent with this a transferred invoice.\r\n\r\nRequest body contains the invoice document.\r\n\r\nA 201 response indicates that the invoice document has been successfully transferred to the external system, and it must contain the external system's invoice document id as the externalId parameter.\r\n\r\nA 202 response indicates that the receipt of the invoice transfer has been acknowledged; an asynchronous update will occur via invoiceConfirm operationId; the supplied 'X-Request-Id' in the request header will be provided as the X-Request-Id header for any associated asynchronous updates.\r\n\r\nAny other response will be considered a failure, the invoice object externalId will not be specified, and the error message you specify will be surfaced to the user.\r\n\r\nA 400 response indicates a data validation error.\r\n\r\nThis callback will timeout after 5 seconds; to prevent inconsistencies, if the request will take longer than 5 seconds, it is appropriate to respond with a 202 response code."
              parameters:
                - name: X-Request-Id
                  in: header
                  description: Token to be able to correctly correlate associated requests
                  schema:
                    type: string
                    format: uuid
              requestBody:
                content:
                  application/pdf:
                    schema:
                      type: string
                      format: binary
                required: true
              responses:
                '201':
                  description: Successful upsert
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SuccessfulUpsertApiResponse'
                '202':
                  description: 'Deferred post, confirmation asynchronous'
                default:
                  description: Unexpected error
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorApiResponse'
        Sync Request:
          '{$request.body#/callbackUrl}/syncRequest':
            post:
              summary: Callback initiated sync master data is triggered from VIC.AI admin panel.
              description: "This request is sent when a user in Vic.ai triggers a sync of all masterdata.\r\n\r\nIn response to this message, you’re expected to post masterdata (vendors, GL accounts, dimensions) into Vic.ai using the respective routes. You may perform a partial update, determining which data to update using queries.\r\n\r\nOnce this process is completed, perform a syncUpdate patch, passing the syncId, which will allow Vic.ai to mark the user's sync action as completed with the 'complete' operation. If you cannot complete this process before the specified timeout, then perform a syncUpdate patch with the 'extend' operation, which will extend the timeout for the update. If the timeout expires before a 'complete' action has been sent, then the request will be marked as 'failed'.\r\n\r\nThe body of the syncRequest contains the requestId; this is a token that should be returned with all upsert actions associated with this syncRequest.\r\n\r\nA 200 response indicates that the request has been acknowledged and informs the user that the sync has been successfully triggered."
              parameters:
                - name: X-Request-Id
                  in: header
                  description: Token to be able to correctly correlate associated requests
                  schema:
                    type: string
                    format: uuid
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/RequestIdCallback'
                required: true
              responses:
                '200':
                  description: Request acknowleged
                default:
                  description: Request unservicable
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorApiResponse'
  '/api/v24/Subscriptions/{id}':
    delete:
      tags:
        - Subscriptions
      summary: DeleteSubscription
      description: Subscriptions can be deleted
      parameters:
        - name: id
          in: query
          description: Id of subscription to delete
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
        '400':
          description: Request error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorApiResponse'
        '404':
          description: Not found error
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
components:
  schemas:
    Animal:
      required:
        - discriminator
      type: object
      properties:
        discriminator:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      discriminator:
        propertyName: discriminator
        mapping:
          Bird: '#/components/schemas/Bird'
          Fish: '#/components/schemas/Fish'
          Mammal: '#/components/schemas/Mammal'
          Reptile: '#/components/schemas/Reptile'
    AnyType:
      enum:
        - Primitive
        - Null
        - Array
        - Object
      type: string
    Bird:
      type: object
      allOf:
        - $ref: '#/components/schemas/Animal'
      properties:
        birdType:
          $ref: '#/components/schemas/BirdType'
      additionalProperties: false
    BirdType:
      enum:
        - None
        - Parrot
        - Peacock
      type: string
    ErrorApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
    Fish:
      type: object
      allOf:
        - $ref: '#/components/schemas/Animal'
      properties:
        fishType:
          $ref: '#/components/schemas/FishType'
      additionalProperties: false
    FishType:
      enum:
        - None
        - SwordFish
        - ClownFish
      type: string
    InvoiceData:
      type: object
      properties:
        transactionType:
          type: string
          nullable: true
        refNumber:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        poNumber:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        issueDate:
          type: string
          format: date-time
        glDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        paymentInfo:
          type: string
          nullable: true
      additionalProperties: false
    IOpenApiAny:
      type: object
      properties:
        anyType:
          $ref: '#/components/schemas/AnyType'
      additionalProperties: false
    IOpenApiCallbackGetter:
      type: object
      properties:
        callback:
          $ref: '#/components/schemas/OpenApiCallback'
        types:
          uniqueItems: true
          type: array
          items:
            type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    IOpenApiExtension:
      type: object
      additionalProperties: false
    Mammal:
      type: object
      allOf:
        - $ref: '#/components/schemas/Animal'
      properties:
        mammalType:
          $ref: '#/components/schemas/MammalType'
      additionalProperties: false
    MammalType:
      enum:
        - None
        - Cat
        - Dog
      type: string
    OpenApiCallback:
      type: object
      properties:
        pathItems:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiPathItem'
          nullable: true
        unresolvedReference:
          type: boolean
        reference:
          $ref: '#/components/schemas/OpenApiReference'
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiDiscriminator:
      type: object
      properties:
        propertyName:
          type: string
          nullable: true
        mapping:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
    OpenApiEncoding:
      type: object
      properties:
        contentType:
          type: string
          nullable: true
        headers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiHeader'
          nullable: true
        style:
          $ref: '#/components/schemas/ParameterStyle'
        explode:
          type: boolean
          nullable: true
        allowReserved:
          type: boolean
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiExample:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        value:
          $ref: '#/components/schemas/IOpenApiAny'
        externalValue:
          type: string
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
        reference:
          $ref: '#/components/schemas/OpenApiReference'
        unresolvedReference:
          type: boolean
      additionalProperties: false
    OpenApiExternalDocs:
      type: object
      properties:
        description:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiHeader:
      type: object
      properties:
        unresolvedReference:
          type: boolean
        reference:
          $ref: '#/components/schemas/OpenApiReference'
        description:
          type: string
          nullable: true
        required:
          type: boolean
        deprecated:
          type: boolean
        allowEmptyValue:
          type: boolean
        style:
          $ref: '#/components/schemas/ParameterStyle'
        explode:
          type: boolean
        allowReserved:
          type: boolean
        schema:
          $ref: '#/components/schemas/OpenApiSchema'
        example:
          $ref: '#/components/schemas/IOpenApiAny'
        examples:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiExample'
          nullable: true
        content:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiMediaType'
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiLink:
      type: object
      properties:
        operationRef:
          type: string
          nullable: true
        operationId:
          type: string
          nullable: true
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RuntimeExpressionAnyWrapper'
          nullable: true
        requestBody:
          $ref: '#/components/schemas/RuntimeExpressionAnyWrapper'
        description:
          type: string
          nullable: true
        server:
          $ref: '#/components/schemas/OpenApiServer'
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
        unresolvedReference:
          type: boolean
        reference:
          $ref: '#/components/schemas/OpenApiReference'
      additionalProperties: false
    OpenApiMediaType:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/OpenApiSchema'
        example:
          $ref: '#/components/schemas/IOpenApiAny'
        examples:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiExample'
          nullable: true
        encoding:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiEncoding'
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiOperation:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiTag'
          nullable: true
        summary:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        externalDocs:
          $ref: '#/components/schemas/OpenApiExternalDocs'
        operationId:
          type: string
          nullable: true
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiParameter'
          nullable: true
        requestBody:
          $ref: '#/components/schemas/OpenApiRequestBody'
        responses:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiResponse'
          nullable: true
        callbacks:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiCallback'
          nullable: true
        deprecated:
          type: boolean
        security:
          type: array
          items:
            type: object
            additionalProperties:
              type: array
              items:
                type: string
          nullable: true
        servers:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiServer'
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiParameter:
      type: object
      properties:
        unresolvedReference:
          type: boolean
        reference:
          $ref: '#/components/schemas/OpenApiReference'
        name:
          type: string
          nullable: true
        in:
          $ref: '#/components/schemas/ParameterLocation'
        description:
          type: string
          nullable: true
        required:
          type: boolean
        deprecated:
          type: boolean
        allowEmptyValue:
          type: boolean
        style:
          $ref: '#/components/schemas/ParameterStyle'
        explode:
          type: boolean
        allowReserved:
          type: boolean
        schema:
          $ref: '#/components/schemas/OpenApiSchema'
        examples:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiExample'
          nullable: true
        example:
          $ref: '#/components/schemas/IOpenApiAny'
        content:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiMediaType'
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiPathItem:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        operations:
          type: object
          properties:
            Get:
              $ref: '#/components/schemas/OpenApiOperation'
            Put:
              $ref: '#/components/schemas/OpenApiOperation'
            Post:
              $ref: '#/components/schemas/OpenApiOperation'
            Delete:
              $ref: '#/components/schemas/OpenApiOperation'
            Options:
              $ref: '#/components/schemas/OpenApiOperation'
            Head:
              $ref: '#/components/schemas/OpenApiOperation'
            Patch:
              $ref: '#/components/schemas/OpenApiOperation'
            Trace:
              $ref: '#/components/schemas/OpenApiOperation'
          additionalProperties: false
          nullable: true
        servers:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiServer'
          nullable: true
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiParameter'
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiReference:
      type: object
      properties:
        externalResource:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ReferenceType'
        id:
          type: string
          nullable: true
        isExternal:
          type: boolean
          readOnly: true
        isLocal:
          type: boolean
          readOnly: true
        referenceV3:
          type: string
          nullable: true
          readOnly: true
        referenceV2:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    OpenApiRequestBody:
      type: object
      properties:
        unresolvedReference:
          type: boolean
        reference:
          $ref: '#/components/schemas/OpenApiReference'
        description:
          type: string
          nullable: true
        required:
          type: boolean
        content:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiMediaType'
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiResponse:
      type: object
      properties:
        description:
          type: string
          nullable: true
        headers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiHeader'
          nullable: true
        content:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiMediaType'
          nullable: true
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiLink'
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
        unresolvedReference:
          type: boolean
        reference:
          $ref: '#/components/schemas/OpenApiReference'
      additionalProperties: false
    OpenApiSchema:
      type: object
      properties:
        title:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        format:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        maximum:
          type: number
          format: double
          nullable: true
        exclusiveMaximum:
          type: boolean
          nullable: true
        minimum:
          type: number
          format: double
          nullable: true
        exclusiveMinimum:
          type: boolean
          nullable: true
        maxLength:
          type: integer
          format: int32
          nullable: true
        minLength:
          type: integer
          format: int32
          nullable: true
        pattern:
          type: string
          nullable: true
        multipleOf:
          type: number
          format: double
          nullable: true
        default:
          $ref: '#/components/schemas/IOpenApiAny'
        readOnly:
          type: boolean
        writeOnly:
          type: boolean
        allOf:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiSchema'
          nullable: true
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiSchema'
          nullable: true
        anyOf:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiSchema'
          nullable: true
        not:
          $ref: '#/components/schemas/OpenApiSchema'
        required:
          uniqueItems: true
          type: array
          items:
            type: string
          nullable: true
        items:
          $ref: '#/components/schemas/OpenApiSchema'
        maxItems:
          type: integer
          format: int32
          nullable: true
        minItems:
          type: integer
          format: int32
          nullable: true
        uniqueItems:
          type: boolean
          nullable: true
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiSchema'
          nullable: true
        maxProperties:
          type: integer
          format: int32
          nullable: true
        minProperties:
          type: integer
          format: int32
          nullable: true
        additionalPropertiesAllowed:
          type: boolean
        additionalProperties:
          $ref: '#/components/schemas/OpenApiSchema'
        discriminator:
          $ref: '#/components/schemas/OpenApiDiscriminator'
        example:
          $ref: '#/components/schemas/IOpenApiAny'
        enum:
          type: array
          items:
            $ref: '#/components/schemas/IOpenApiAny'
          nullable: true
        nullable:
          type: boolean
        externalDocs:
          $ref: '#/components/schemas/OpenApiExternalDocs'
        deprecated:
          type: boolean
        xml:
          $ref: '#/components/schemas/OpenApiXml'
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
        unresolvedReference:
          type: boolean
        reference:
          $ref: '#/components/schemas/OpenApiReference'
      additionalProperties: false
    OpenApiServer:
      type: object
      properties:
        description:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OpenApiServerVariable'
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiServerVariable:
      type: object
      properties:
        description:
          type: string
          nullable: true
        default:
          type: string
          nullable: true
        enum:
          type: array
          items:
            type: string
          nullable: true
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    OpenApiTag:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        externalDocs:
          $ref: '#/components/schemas/OpenApiExternalDocs'
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
        unresolvedReference:
          type: boolean
        reference:
          $ref: '#/components/schemas/OpenApiReference'
      additionalProperties: false
    OpenApiXml:
      type: object
      properties:
        name:
          type: string
          nullable: true
        namespace:
          type: string
          format: uri
          nullable: true
        prefix:
          type: string
          nullable: true
        attribute:
          type: boolean
        wrapped:
          type: boolean
        extensions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IOpenApiExtension'
          nullable: true
      additionalProperties: false
    ParameterLocation:
      enum:
        - Query
        - Header
        - Path
        - Cookie
      type: string
    ParameterStyle:
      enum:
        - Matrix
        - Label
        - Form
        - Simple
        - SpaceDelimited
        - PipeDelimited
        - DeepObject
      type: string
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    ReferenceType:
      enum:
        - Schema
        - Response
        - Parameter
        - Example
        - RequestBody
        - Header
        - SecurityScheme
        - Link
        - Callback
        - Tag
      type: string
    Reptile:
      type: object
      allOf:
        - $ref: '#/components/schemas/Animal'
      properties:
        reptileType:
          $ref: '#/components/schemas/ReptileType'
      additionalProperties: false
    ReptileType:
      enum:
        - None
        - Lizard
        - Turtle
      type: string
    RequestIdCallback:
      type: object
      properties:
        externalId:
          type: string
          format: uuid
      additionalProperties: false
    RuntimeExpression:
      type: object
      properties:
        expression:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    RuntimeExpressionAnyWrapper:
      type: object
      properties:
        any:
          $ref: '#/components/schemas/IOpenApiAny'
        expression:
          $ref: '#/components/schemas/RuntimeExpression'
      additionalProperties: false
    StringIOpenApiCallbackGetterKeyValuePair:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          $ref: '#/components/schemas/IOpenApiCallbackGetter'
      additionalProperties: false
    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        callbackUrl:
          type: string
          nullable: true
        callbackToken:
          type: string
          nullable: true
      additionalProperties: false
    SubscriptionWebhookCallbackDefinition:
      type: object
      properties:
        callbacks:
          type: array
          items:
            $ref: '#/components/schemas/StringIOpenApiCallbackGetterKeyValuePair'
          nullable: true
          readOnly: true
        types:
          type: array
          items:
            type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    SuccessfulUpsertApiResponse:
      type: object
      properties:
        externalId:
          type: string
          format: uuid
        externalUpdatedAt:
          type: string
          format: date-time
      additionalProperties: false
    VendorCallback:
      required:
        - addressCity
        - addressPostalCode
        - addressState
        - countryCode
        - currency
        - email
        - name
        - phone
        - streetAddress
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        streetAddress:
          type: string
        addressCity:
          type: string
        addressState:
          type: string
        addressPostalCode:
          type: string
        countryCode:
          type: string
          description: Country code in alpha-2 format
          example: US
        currency:
          type: string
          description: Currency code
          format: ISO-4217
          example: USD
        confirmedAt:
          type: string
          format: date-time
          nullable: true
        additionalProperties:
          type: object
          additionalProperties: { }
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: JWT Authorization header using the Bearer scheme.
      scheme: bearer
security:
  - Bearer: [ ]